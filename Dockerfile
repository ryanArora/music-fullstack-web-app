FROM node:22.14.0-slim
RUN apt update && \
    apt upgrade -y && \
    apt install -y openssl postgresql-client curl && \
    rm -rf /var/lib/apt/lists/* && \
    npm install -g corepack@latest
WORKDIR /app

COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* pnpm-workspace.yaml* .npmrc* ./
COPY prisma ./prisma
RUN corepack enable pnpm && pnpm install --frozen-lockfile

COPY . .

ENV HOSTNAME
ENV PORT
ENV POSTGRES_URL
ENV POSTGRES_USER
ENV POSTGRES_PASSWORD
ENV POSTGRES_DB
ENV MINIO_USER
ENV MINIO_PASSWORD
ENV MINIO_ENDPOINT
ENV MINIO_PORT
ENV MINIO_USE_SSL
ENV MINIO_BUCKET_NAME_MUSIC
ENV MINIO_BUCKET_NAME_ARTIST_IMAGES
ENV MINIO_BUCKET_NAME_ALBUM_IMAGES
ENV MINIO_BUCKET_NAME_PLAYLIST_IMAGES
ENV AUTH_SECRET
ENV AUTH_URL
ENV AUTH_DISCORD_ID
ENV AUTH_DISCORD_SECRET
ENV AUTH_TRUST_HOST
ENV NEXT_PUBLIC_IS_STAGING
ENV SUNOAPI_API_KEY

ARG HOSTNAME
ARG PORT
ARG POSTGRES_URL
ARG POSTGRES_USER
ARG POSTGRES_PASSWORD
ARG POSTGRES_DB
ARG MINIO_USER
ARG MINIO_PASSWORD
ARG MINIO_ENDPOINT
ARG MINIO_PORT
ARG MINIO_USE_SSL
ARG MINIO_BUCKET_NAME_MUSIC
ARG MINIO_BUCKET_NAME_ARTIST_IMAGES
ARG MINIO_BUCKET_NAME_ALBUM_IMAGES
ARG MINIO_BUCKET_NAME_PLAYLIST_IMAGES
ARG AUTH_SECRET
ARG AUTH_URL
ARG AUTH_DISCORD_ID
ARG AUTH_DISCORD_SECRET
ARG AUTH_TRUST_HOST
ARG NEXT_PUBLIC_IS_STAGING
ARG SUNOAPI_API_KEY

RUN pnpm build

EXPOSE 3000
CMD ["sh", "-c", "./scripts/healthcheck.sh && pnpm db:deploy && pnpm start"]
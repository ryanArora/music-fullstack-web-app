generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("POSTGRES_URL")
}

model Artist {
    id        String   @id @default(cuid())
    name      String
    imageUrl  String
    songs     Song[]
    albums    Album[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
}

model Song {
    id          String         @id @default(cuid())
    title       String
    duration    Int // in seconds
    url         String
    imageUrl    String
    artistId    String
    artist      Artist         @relation(fields: [artistId], references: [id], onDelete: Cascade)
    albumId     String?
    album       Album?         @relation(fields: [albumId], references: [id], onDelete: SetNull)
    playlists   PlaylistSong[]
    genre       String?
    releaseDate DateTime
    createdAt   DateTime       @default(now())
    updatedAt   DateTime       @updatedAt

    @@index([title])
    @@index([artistId])
    @@index([albumId])
}

model Album {
    id          String    @id @default(cuid())
    title       String
    imageUrl    String
    artistId    String
    artist      Artist    @relation(fields: [artistId], references: [id], onDelete: Cascade)
    songs       Song[]
    releaseDate DateTime
    type        AlbumType @default(ALBUM)
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt

    @@index([title])
    @@index([artistId])
}

enum AlbumType {
    ALBUM
    EP
    SINGLE
}

model Playlist {
    id        String         @id @default(cuid())
    title     String
    imageUrl  String?
    songs     PlaylistSong[]
    createdAt DateTime       @default(now())
    updatedAt DateTime       @updatedAt

    @@index([title])
}

model PlaylistSong {
    id         String   @id @default(cuid())
    playlistId String
    playlist   Playlist @relation(fields: [playlistId], references: [id], onDelete: Cascade)
    songId     String
    song       Song     @relation(fields: [songId], references: [id], onDelete: Cascade)
    order      Int
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt

    @@index([playlistId])
    @@index([songId])
}
